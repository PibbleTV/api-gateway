name: Deploy to test server

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy docker-compose to test server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout backend repo
        uses: actions/checkout@v3

      - name: Checkout frontend repo
        uses: actions/checkout@v3
        with:
          repository: PibbleTV/react-app
          token: ${{ secrets.GH_TOKEN }}
          path: frontend

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Copy all files to VM
        run: |
          scp -o StrictHostKeyChecking=no \
            docker-compose-backend.yml kompose-backend.override.yml \
            ${{ secrets.SSH_USER }}@145.220.75.5:/home/${{ secrets.SSH_USER }}/

          scp -o StrictHostKeyChecking=no \
            frontend/docker-compose-frontend.yml frontend/kompose-frontend.override.yml \
            ${{ secrets.SSH_USER }}@145.220.75.5:/home/${{ secrets.SSH_USER }}/

      - name: Delete all current kubernetes pods
        run: |
          ssh ${{ secrets.SSH_USER }}@145.220.75.5 << 'EOF'
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S k3s kubectl delete deployments,services --all --namespace backend
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S k3s kubectl delete deployments,services --all --namespace frontend
          EOF

      - name: Convert and apply Kubernetes manifests
        run: |
          ssh ${{ secrets.SSH_USER }}@145.220.75.5 << 'EOF'
            set -e
            cd /home/${{ secrets.SSH_USER }}

            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GH_TOKEN }}

            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S kompose convert -f docker-compose-backend.yml -f kompose-backend.override.yml -o k8s-backend/
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S kompose convert -f docker-compose-frontend.yml -f kompose-frontend.override.yml -o k8s-frontend/

            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S k3s kubectl apply -f k8s-backend/ --namespace backend
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S k3s kubectl apply -f k8s-frontend/ --namespace frontend
          EOF

      - name: Cleanup SSH keys
        run: rm -rf ~/.ssh