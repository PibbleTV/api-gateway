name: Deploy to test server

on:
  workflow_dispatch

jobs:
  deploy:
    name: Deploy docker-compose to test server
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    steps:
      - uses: actions/checkout@v3
      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}

      - name: Checkout backend repo
        uses: actions/checkout@v3

      - name: Checkout frontend repo
        uses: actions/checkout@v3
        with:
          repository: PibbleTV/react-app
          token: ${{ secrets.GH_TOKEN }}
          path: frontend

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -T 20 -H 100.118.7.16 > ~/.ssh/known_hosts || echo "ssh-keyscan failed"

      - name: Recreate variables.env
        run: |
          echo "${{ secrets.BACKEND_ENV_FILE }}" > variables.env

      - name: Copy all files to VM
        run: |
          scp -o StrictHostKeyChecking=no docker-compose-backend.yml kompose-backend.override.yml variables.env ${{ secrets.SSH_USER }}@100.118.7.16:/home/${{ secrets.SSH_USER }}
          scp -o StrictHostKeyChecking=no frontend/docker-compose-frontend.yml frontend/kompose-frontend.override.yml ${{ secrets.SSH_USER }}@100.118.7.16:/home/${{ secrets.SSH_USER }}

      - name: Delete all current kubernetes pods
        run: |
          ssh ${{ secrets.SSH_USER }}@100.118.7.16 << EOF
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S k3s kubectl delete deployments,services --all --namespace backend
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S k3s kubectl delete deployments,services --all --namespace frontend
          EOF

      - name: Convert and apply Kubernetes manifests
        run: |
          ssh ${{ secrets.SSH_USER }}@100.118.7.16 << EOF
            set -e
            cd /home/${{ secrets.SSH_USER }}

            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GH_TOKEN }}

            export $(grep -v '^#' variables.env | xargs)

            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker compose -f docker-compose-frontend.yml -f kompose-frontend.override.yml config > merged-frontend.yml
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S kompose convert -f merged-frontend.yml -o k8s-frontend/
          
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker compose --env-file variables.env -f docker-compose-backend.yml -f kompose-backend.override.yml config > merged-backend.yml
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S kompose convert -f merged-backend.yml -o k8s-backend/

            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S k3s kubectl apply -f k8s-frontend/ --namespace frontend
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S k3s kubectl apply -f k8s-backend/ --namespace backend
          EOF

      - name: Cleanup SSH keys
        run: rm -rf ~/.ssh