name: Publish Docker image

on:
  push:
    branches:
      - "main"

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: Build Spring Boot application
        run: ./gradlew clean build --stacktrace
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Install Syft and Grype
        run: |
          curl -sSL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          curl -sSL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate SBOM
        run: syft . -o cyclonedx-json > sbom.json

      - name: Scan SBOM for vulnerabilities
        run: grype sbom:./sbom.json

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Generate Docker image hash
        run: |
          docker image inspect ghcr.io/pibbletv/pibbletv-gateway:latest | jq -r '.[0].Id' | sha256sum > artifact_hashes.txt

      - name: Install Cosign
        run: |
          curl -sSL https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64 -o /usr/local/bin/cosign
          chmod +x /usr/local/bin/cosign

      - name: Build Docker image
        run: docker build -f Dockerfile -t ghcr.io/pibbletv/pibbletv-gateway:latest .

      - name: Push Docker image
        run: docker push ghcr.io/pibbletv/pibbletv-gateway:latest

      - name: Sign Docker image
        run: |
          printf '%s\n' "${{ secrets.COSIGN_PRIVATE_KEY }}" > cosign.key
          cosign sign --key cosign.key --upload-tlog=true --verbose ${{ env.IMAGE_DIGEST }} 2>&1 | tee sign.log
          rm -f cosign.key
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

      - name: Verify image signature
        run: |
          printf '%s\n' "${{ secrets.COSIGN_PUBLIC_KEY }}" > cosign.pub
          cosign verify --key cosign.pub ghcr.io/pibbletv/pibbletv-gateway:latest
          rm -f cosign.pub
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

      - name: Test pulling image from GHCR
        run: |
          docker pull ghcr.io/pibbletv/pibbletv-gateway:latest

      - name: Initialize release pipeline
        run: gh workflow run "deploy-to-test-server.yml" --repo PibbleTV/api-gateway --json
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}